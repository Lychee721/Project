`timescale 1ns/1ps

module pipeline_reg_MEM_WB(
    input  logic        clk,
    input  logic        reset,

    // 来自MEM阶段
    input  logic [31:0] mem_wb_data_in,  // load data or alu_result
    input  logic        reg_write_in,
    input  logic [4:0]  rd_idx_in,

    // 输出到WB阶段
    output logic [31:0] mem_wb_data_out,
    output logic        reg_write_out,
    output logic [4:0]  rd_idx_out
);

    always_ff @(posedge clk or posedge reset) begin
        
		  if(reset) begin
            
				mem_wb_data_out <= 32'd0;
            reg_write_out   <= 1'b0;       
				rd_idx_out      <= 5'd0;
        
		  end
        
		  else begin
            
				
				mem_wb_data_out <= mem_wb_data_in;
            reg_write_out   <= reg_write_in;
            rd_idx_out      <= rd_idx_in;
        
		  end
    end

endmodule
